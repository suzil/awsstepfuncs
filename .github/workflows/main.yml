name: GH

on:
  pull_request:
  push:
    branches: [master]
  release:
    branches: [master]
    types: [published]

jobs:
  cancel_previous_runs:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  CI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Pre-commit cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ matrix.python-version }}-${{ hashFiles('**/requirements/ci.txt') }}-${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install
      run: |
        pip install -U pip setuptools wheel
        make install
        sudo apt install graphviz
        pip install codecov

    - name: Lint
      run: make lint

    - name: Test
      run: |
        make doctest
        make unittest  # Exclude doctests from coverage

    - name: Docs
      run: SPHINXOPTS=-W make builddocs

    - name: Codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: codecov

  CD:
    needs: CI
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: PyPI Deploy preparation
      run: |
        pip install -U setuptools wheel
        python setup.py sdist bdist_wheel

    - name: PyPI Deploy
      uses: pypa/gh-action-pypi-publish@v1.3.1
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
